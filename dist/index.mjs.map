{"version":3,"sources":["../src/logic/CountdownTimer.ts","../src/logic/TimerViewModel.ts","../src/ui/TimerWheelConfig.ts","../src/ui/haptics.ts","../src/ui/TimerWheelView.tsx","../src/ui/WheelTimer.tsx"],"names":["useRef","useState","Animated","Easing","s","useMemo","StyleSheet","jsxs","View","jsx","Text"],"mappings":";;;;;AAGO,IAAM,iBAAN,MAAqB;AAAA;AAAA,EAW1B,YAAY,KAAA,EAAe;AAT3B,IAAA,IAAA,CAAQ,UAAA,GAAkB,IAAA;AAC1B,IAAA,IAAA,CAAQ,SAAA,uBAAgB,GAAA,EAAuB;AAS7C,IAAA,IAAA,CAAK,iBAAA,GAAoB,KAAK,GAAA,CAAI,CAAA,EAAG,KAAK,KAAA,CAAM,KAAA,IAAS,CAAC,CAAC,CAAA;AAC3D,IAAA,IAAA,CAAK,cAAA,EAAe;AAAA,EACtB;AAAA;AAAA,EARA,IAAI,SAAA,GAAoB;AACtB,IAAA,OAAO,IAAA,CAAK,iBAAA;AAAA,EACd;AAAA;AAAA,EASO,cAAA,GAAiB;AACtB,IAAA,IAAI,KAAK,UAAA,EAAY;AACrB,IAAA,IAAA,CAAK,UAAA,GAAa,YAAY,MAAM;AAClC,MAAA,IAAI,IAAA,CAAK,oBAAoB,CAAA,EAAG;AAC9B,QAAA,IAAA,CAAK,iBAAA,IAAqB,CAAA;AAC1B,QAAA,IAAA,CAAK,IAAA,EAAK;AAAA,MACZ;AAAA,IACF,GAAG,GAAI,CAAA;AAAA,EACT;AAAA;AAAA,EAGO,OAAO,SAAA,EAAmB;AAC/B,IAAA,IAAA,CAAK,iBAAA,GAAoB,KAAK,GAAA,CAAI,CAAA,EAAG,KAAK,iBAAA,GAAoB,IAAA,CAAK,KAAA,CAAM,SAAS,CAAC,CAAA;AACnF,IAAA,IAAA,CAAK,IAAA,EAAK;AAAA,EACZ;AAAA;AAAA,EAGO,UAAU,QAAA,EAAyC;AACxD,IAAA,IAAA,CAAK,SAAA,CAAU,IAAI,QAAQ,CAAA;AAC3B,IAAA,QAAA,CAAS,KAAK,iBAAiB,CAAA;AAC/B,IAAA,OAAO,MAAM,IAAA,CAAK,SAAA,CAAU,MAAA,CAAO,QAAQ,CAAA;AAAA,EAC7C;AAAA;AAAA,EAGO,OAAA,GAAU;AACf,IAAA,IAAI,IAAA,CAAK,UAAA,EAAY,aAAA,CAAc,IAAA,CAAK,UAAU,CAAA;AAClD,IAAA,IAAA,CAAK,UAAA,GAAa,IAAA;AAClB,IAAA,IAAA,CAAK,UAAU,KAAA,EAAM;AAAA,EACvB;AAAA,EAEQ,IAAA,GAAO;AACb,IAAA,KAAA,MAAW,CAAA,IAAK,IAAA,CAAK,SAAA,EAAW,CAAA,CAAE,KAAK,iBAAiB,CAAA;AAAA,EAC1D;AACF;;;AChDO,IAAM,iBAAN,MAAqB;AAAA;AAAA,EAM1B,IAAI,gBAAA,GAA2B;AAC7B,IAAA,OAAO,IAAA,CAAK,wBAAA;AAAA,EACd;AAAA;AAAA,EAGA,WAAA,CAAY,eAAuB,EAAA,EAAI;AACrC,IAAA,MAAM,IAAA,GAAO,KAAK,GAAA,CAAI,CAAA,EAAG,KAAK,KAAA,CAAM,YAAA,GAAe,EAAE,CAAC,CAAA;AACtD,IAAA,IAAA,CAAK,KAAA,GAAQ,IAAI,cAAA,CAAe,IAAI,CAAA;AACpC,IAAA,IAAA,CAAK,wBAAA,GAA2B,IAAA;AAChC,IAAA,IAAA,CAAK,KAAA,GAAQ,KAAK,KAAA,CAAM,SAAA,CAAU,CAAC,CAAA,KAAO,IAAA,CAAK,2BAA2B,CAAE,CAAA;AAAA,EAC9E;AAAA;AAAA,EAGO,OAAO,OAAA,EAAiB;AAC7B,IAAA,IAAA,CAAK,KAAA,CAAM,MAAA,CAAO,OAAA,GAAU,EAAE,CAAA;AAAA,EAChC;AAAA;AAAA,EAGA,IAAW,UAAA,GAAqB;AAC9B,IAAA,MAAM,CAAA,GAAI,IAAA,CAAK,KAAA,CAAM,IAAA,CAAK,2BAA2B,EAAE,CAAA;AACvD,IAAA,MAAM,CAAA,GAAI,KAAK,wBAAA,GAA2B,EAAA;AAC1C,IAAA,OAAO,CAAA,EAAG,MAAA,CAAO,CAAC,CAAA,CAAE,SAAS,CAAA,EAAG,GAAG,CAAC,CAAA,CAAA,EAAI,OAAO,CAAC,CAAA,CAAE,QAAA,CAAS,CAAA,EAAG,GAAG,CAAC,CAAA,CAAA;AAAA,EACpE;AAAA;AAAA,EAGO,UAAU,QAAA,EAAkC;AACjD,IAAA,QAAA,CAAS,KAAK,wBAAwB,CAAA;AACtC,IAAA,OAAO,IAAA,CAAK,MAAM,SAAA,CAAU,CAAC,MAAM,QAAA,CAAU,IAAA,CAAK,wBAAA,GAA2B,CAAE,CAAC,CAAA;AAAA,EAClF;AAAA,EAEO,OAAA,GAAU;AACf,IAAA,IAAA,CAAK,KAAA,IAAQ;AACb,IAAA,IAAA,CAAK,MAAM,OAAA,EAAQ;AAAA,EACrB;AACF;;;ACtBO,IAAM,aAAA,GAAkC;AAAA,EAC7C,UAAA,EAAY,CAAA;AAAA,EACZ,UAAA,EAAY,EAAA;AAAA,EACZ,aAAA,EAAe,IAAA;AAAA,EACf,cAAA,EAAgB,IAAA;AAAA,EAChB,UAAA,EAAY,CAAA;AAAA,EACZ,aAAA,EAAe,EAAA;AAAA,EACf,YAAA,EAAc,CAAC,uBAAA,EAAyB,uBAAuB,CAAA;AAAA,EAC/D,eAAA,EAAiB,EAAA;AAAA,EACjB,gBAAA,EAAkB,CAAA;AAAA,EAClB,gBAAA,EAAkB,IAAA;AAAA,EAClB,eAAA,EAAiB,GAAA;AAAA,EACjB,eAAA,EAAiB,GAAA;AAAA,EACjB,uBAAA,EAAyB;AAC3B;ACnCO,SAAS,UAAA,GAAa;AAE3B,EAAA,IAAI,QAAA,CAAS,EAAA,KAAO,SAAA,EAAW,SAAA,CAAU,QAAQ,CAAC,CAAA;AAAA,OAC7C,SAAA,CAAU,QAAQ,CAAC,CAAA;AAC1B;AAEO,SAAS,aAAA,GAAgB;AAC9B,EAAA,IAAI,QAAA,CAAS,EAAA,KAAO,SAAA,EAAW,SAAA,CAAU,OAAA,CAAQ,CAAC,CAAA,EAAG,EAAA,EAAI,EAAA,EAAI,EAAE,CAAC,CAAA;AAAA,iBACjD,OAAA,CAAQ,CAAC,GAAG,EAAA,EAAI,EAAA,EAAI,EAAE,CAAC,CAAA;AACxC;ACgBO,IAAM,iBAAgD,CAAC;AAAA,EAC5D,MAAA,EAAQ,GAAA;AAAA,EACR,gBAAA;AAAA,EACA,IAAA,GAAO;AACT,CAAA,KAAM;AACJ,EAAA,MAAM,SAA2B,EAAE,GAAG,eAAe,GAAI,GAAA,IAAO,EAAC,EAAG;AAGpE,EAAA,MAAM,CAAC,MAAA,EAAQ,SAAS,CAAA,GAAI,QAAA,CAAS,OAAO,CAAC,CAAA;AAC7C,EAAA,MAAM,CAAC,MAAA,EAAQ,SAAS,CAAA,GAAI,QAAA,CAAS,EAAE,CAAA,EAAG,IAAA,GAAO,CAAA,EAAG,CAAA,EAAG,IAAA,GAAO,CAAA,EAAG,CAAA;AAGjE,EAAA,MAAM,QAAA,GAAW,OAAO,CAAC,CAAA;AACzB,EAAA,MAAM,SAAA,GAAY,OAAsB,IAAI,CAAA;AAC5C,EAAA,MAAM,aAAA,GAAgB,OAAO,CAAC,CAAA;AAC9B,EAAA,MAAM,CAAC,OAAA,EAAS,UAAU,CAAA,GAAI,SAAS,CAAC,CAAA;AACxC,EAAA,MAAM,CAAC,WAAA,EAAa,cAAc,CAAA,GAAI,SAAS,KAAK,CAAA;AAGpD,EAAA,MAAM,gBAAgB,MAAA,CAAO,IAAI,SAAS,KAAA,CAAM,CAAC,CAAC,CAAA,CAAE,OAAA;AACpD,EAAA,MAAM,iBAAiB,MAAA,CAAO,IAAI,SAAS,KAAA,CAAM,CAAC,CAAC,CAAA,CAAE,OAAA;AACrD,EAAA,MAAM,cAAc,MAAA,CAAO,IAAI,SAAS,KAAA,CAAM,CAAC,CAAC,CAAA,CAAE,OAAA;AAClD,EAAA,MAAM,SAAA,GAAY,OAAO,CAAC,CAAA;AAE1B,EAAA,MAAM,MAAA,GAAS,OAAA;AAAA,IACb,MACE,WAAW,MAAA,CAAO;AAAA,MAChB,IAAA,EAAM,EAAE,KAAA,EAAO,IAAA,EAAM,QAAQ,IAAA,EAAM,UAAA,EAAY,QAAA,EAAU,cAAA,EAAgB,QAAA,EAAS;AAAA,MAClF,IAAA,EAAM;AAAA,QACJ,QAAA,EAAU,UAAA;AAAA,QACV,KAAA,EAAO,IAAA;AAAA,QACP,MAAA,EAAQ,IAAA;AAAA,QACR,YAAA,EAAc,MAAA;AAAA,QACd,aAAa,MAAA,CAAO,aAAA;AAAA,QACpB,WAAA,EAAa;AAAA,OACf;AAAA,MACA,SAAA,EAAW;AAAA,QACT,QAAA,EAAU,UAAA;AAAA,QACV,MAAM,MAAA,CAAO,aAAA;AAAA,QACb,KAAK,MAAA,CAAO,aAAA;AAAA,QACZ,KAAA,EAAO,IAAA,GAAO,MAAA,CAAO,aAAA,GAAgB,CAAA;AAAA,QACrC,MAAA,EAAQ,IAAA,GAAO,MAAA,CAAO,aAAA,GAAgB,CAAA;AAAA,QACtC,YAAA,EAAA,CAAe,IAAA,GAAO,MAAA,CAAO,aAAA,GAAgB,CAAA,IAAK,CAAA;AAAA,QAClD,eAAA,EAAiB;AAAA,OACnB;AAAA,MACA,YAAA,EAAc;AAAA,QACZ,QAAA,EAAU,UAAA;AAAA,QACV,KAAA,EAAO,MAAA;AAAA,QACP,MAAA,EAAQ,MAAA;AAAA,QACR,cAAc,MAAA,GAAS,CAAA;AAAA,QACvB,WAAA,EAAa,CAAA;AAAA,QACb,WAAA,EAAa;AAAA,OACf;AAAA,MACA,WAAA,EAAa,EAAE,UAAA,EAAY,QAAA,EAAU,gBAAgB,QAAA,EAAS;AAAA,MAC9D,YAAA,EAAc;AAAA,QACZ,OAAO,MAAA,CAAO,eAAA;AAAA,QACd,QAAQ,MAAA,CAAO,gBAAA;AAAA,QACf,YAAA,EAAc,OAAO,gBAAA,GAAmB,CAAA;AAAA,QACxC,eAAA,EAAiB,iBAAA;AAAA,QACjB,QAAA,EAAU;AAAA,OACZ;AAAA,MACA,WAAA,EAAa;AAAA,QACX,QAAQ,MAAA,CAAO,gBAAA;AAAA,QACf,YAAA,EAAc,OAAO,gBAAA,GAAmB,CAAA;AAAA,QACxC,eAAA,EAAiB;AAAA,OACnB;AAAA,MACA,WAAW,EAAE,QAAA,EAAU,IAAI,UAAA,EAAY,KAAA,EAAO,SAAS,GAAA;AAAI,KAC5D,CAAA;AAAA,IACH,CAAC,IAAA,EAAM,MAAA,EAAQ,MAAM;AAAA,GACvB;AAEA,EAAA,SAAS,SAAS,CAAA,EAAsB;AACtC,IAAA,MAAM,CAAA,GAAI,CAAA,CAAE,WAAA,CAAY,MAAA,CAAO,KAAA;AAC/B,IAAA,MAAM,CAAA,GAAI,CAAA,CAAE,WAAA,CAAY,MAAA,CAAO,MAAA;AAC/B,IAAA,SAAA,CAAU,IAAI,CAAC,CAAA;AACf,IAAA,SAAA,CAAU,EAAE,CAAA,EAAG,CAAA,GAAI,GAAG,CAAA,EAAG,CAAA,GAAI,GAAG,CAAA;AAAA,EAClC;AAEA,EAAA,SAAS,UAAA,CAAW,GAAW,CAAA,EAAmB;AAChD,IAAA,MAAM,EAAA,GAAK,IAAI,MAAA,CAAO,CAAA;AACtB,IAAA,MAAM,EAAA,GAAK,IAAI,MAAA,CAAO,CAAA;AACtB,IAAA,OAAQ,KAAK,KAAA,CAAM,EAAA,EAAI,EAAE,CAAA,GAAI,MAAO,IAAA,CAAK,EAAA;AAAA,EAC3C;AAEA,EAAA,SAAS,WAAW,KAAA,EAAe;AAEjC,IAAA,IAAI,aAAA,GAAgB,KAAA;AACpB,IAAA,IAAI,aAAA,GAAgB,KAAK,aAAA,IAAiB,GAAA;AAC1C,IAAA,IAAI,aAAA,GAAgB,MAAM,aAAA,IAAiB,GAAA;AAE3C,IAAA,MAAM,iBAAA,GAAoB,SAAS,OAAA,GAAU,aAAA;AAC7C,IAAA,MAAM,KAAA,GAAQ,oBAAoB,MAAA,CAAO,UAAA;AACzC,IAAA,IAAI,IAAA,GAAO,IAAA,CAAK,KAAA,CAAM,KAAK,IAAI,MAAA,CAAO,UAAA;AAGtC,IAAA,IAAI,MAAA,CAAO,aAAa,CAAA,EAAG;AACzB,MAAA,IAAI,IAAA,GAAO,MAAA,CAAO,UAAA,EAAY,IAAA,GAAO,MAAA,CAAO,UAAA;AAC5C,MAAA,IAAI,OAAO,CAAC,MAAA,CAAO,UAAA,EAAY,IAAA,GAAO,CAAC,MAAA,CAAO,UAAA;AAAA,IAChD;AACA,IAAA,IAAI,CAAC,MAAA,CAAO,cAAA,IAAkB,IAAA,GAAO,GAAG,IAAA,GAAO,CAAA;AAG/C,IAAA,MAAM,UAAU,aAAA,CAAc,OAAA;AAC9B,IAAA,MAAM,KAAA,GAAQ,MAAA,CAAO,UAAA,GAAa,CAAA,IAAK,YAAY,MAAA,CAAO,UAAA;AAC1D,IAAA,MAAM,QAAQ,MAAA,CAAO,UAAA,GAAa,CAAA,IAAK,OAAA,KAAY,CAAC,MAAA,CAAO,UAAA;AAC3D,IAAA,MAAM,WAAA,GAAc,CAAC,MAAA,CAAO,cAAA,IAAkB,OAAA,KAAY,CAAA;AAE1D,IAAA,IAAI,OAAA,GAAU,KAAA;AACd,IAAA,IAAI,KAAA,IAAS,aAAA,GAAgB,CAAA,EAAG,OAAA,GAAU,IAAA;AAAA,SAAA,IACjC,KAAA,IAAS,aAAA,GAAgB,CAAA,EAAG,OAAA,GAAU,IAAA;AAAA,SAAA,IACtC,WAAA,IAAe,aAAA,GAAgB,CAAA,EAAG,OAAA,GAAU,IAAA;AAErD,IAAA,IAAI,OAAA,EAAS;AACX,MAAA,aAAA,CAAc,OAAA,GAAU,IAAA;AACxB,MAAA,UAAA,CAAW,IAAI,CAAA;AACf,MAAA,cAAA,CAAe,IAAI,CAAA;AACnB,MAAA;AAAA,IACF;AAGA,IAAA,QAAA,CAAS,OAAA,IAAW,aAAA;AACpB,IAAA,aAAA,CAAc,QAAA,CAAS,SAAS,OAAO,CAAA;AAGvC,IAAA,MAAM,UAAU,IAAA,CAAK,KAAA,CAAM,QAAA,CAAS,OAAA,GAAU,OAAO,UAAU,CAAA;AAC/D,IAAA,MAAM,UAAA,GACH,MAAA,CAAO,UAAA,GAAa,CAAA,KAAM,SAAS,MAAA,CAAO,UAAA,IAAc,IAAA,KAAS,CAAC,MAAA,CAAO,UAAA,CAAA,IACzE,CAAC,MAAA,CAAO,kBAAkB,IAAA,KAAS,CAAA;AAEtC,IAAA,IAAI,OAAA,KAAY,SAAA,CAAU,OAAA,IAAW,CAAC,UAAA,EAAY;AAChD,MAAA,SAAA,CAAU,OAAA,GAAU,OAAA;AACpB,MAAA,UAAA,EAAW;AAAA,IACb;AAEA,IAAA,aAAA,CAAc,OAAA,GAAU,IAAA;AACxB,IAAA,UAAA,CAAW,IAAI,CAAA;AACf,IAAA,cAAA,CAAe,IAAI,CAAA;AAAA,EACrB;AAEA,EAAA,SAAS,aAAA,GAAgB;AACvB,IAAA,MAAM,UAAU,aAAA,CAAc,OAAA;AAC9B,IAAA,IAAI,YAAY,CAAA,EAAG;AACjB,MAAA,UAAA,EAAW;AACX,MAAA;AAAA,IACF;AAGA,IAAA,QAAA,CAAS,OAAO,aAAA,EAAe;AAAA,MAC7B,OAAA,EAAS,CAAA;AAAA,MACT,eAAA,EAAiB,IAAA;AAAA,MACjB,KAAA,EAAO,EAAA;AAAA,MACP,UAAA,EAAY;AAAA,KACb,EAAE,KAAA,EAAM;AAGT,IAAA,WAAA,CAAY,SAAS,CAAC,CAAA;AACtB,IAAA,QAAA,CAAS,OAAO,WAAA,EAAa;AAAA,MAC3B,OAAA,EAAS,CAAA;AAAA,MACT,QAAA,EAAU,GAAA;AAAA,MACV,QAAQ,MAAA,CAAO,MAAA;AAAA,MACf,eAAA,EAAiB;AAAA,KAClB,EAAE,KAAA,EAAM;AAGT,IAAA,MAAM,IAAA,GAAO,MAAA,CAAA,CAAQ,IAAA,CAAK,GAAA,CAAI,OAAO,IAAI,MAAA,CAAO,aAAA,EAAe,OAAA,CAAQ,CAAC,CAAC,CAAA;AACzE,IAAA,UAAA,CAAW,MAAM;AACf,MAAA,gBAAA,CAAiB,OAAA,EAAS,IAAA,EAAM,CAAC,EAAA,KAAO;AACtC,QAAA,IAAI,IAAI,SAAA,EAAU;AAAA,aACb,UAAA,EAAW;AAAA,MAClB,CAAC,CAAA;AAAA,IACH,GAAG,GAAI,CAAA;AAGP,IAAA,QAAA,CAAS,OAAA,GAAU,CAAA;AACnB,IAAA,SAAA,CAAU,OAAA,GAAU,IAAA;AACpB,IAAA,SAAA,CAAU,OAAA,GAAU,CAAA;AAAA,EACtB;AAEA,EAAA,SAAS,UAAA,GAAa;AACpB,IAAA,cAAA,CAAe,KAAK,CAAA;AACpB,IAAA,UAAA,CAAW,CAAC,CAAA;AACZ,IAAA,cAAA,CAAe,SAAS,CAAC,CAAA;AACzB,IAAA,WAAA,CAAY,SAAS,CAAC,CAAA;AAAA,EACxB;AAEA,EAAA,SAAS,SAAA,GAAY;AACnB,IAAA,QAAA,CAAS,OAAO,cAAA,EAAgB;AAAA,MAC9B,OAAA,EAAS,CAAA;AAAA,MACT,QAAA,EAAU,GAAA;AAAA,MACV,eAAA,EAAiB;AAAA,KAClB,CAAA,CAAE,KAAA,CAAM,MAAM;AACb,MAAA,UAAA,EAAW;AAAA,IACb,CAAC,CAAA;AAAA,EACH;AAGA,EAAA,MAAM,YAAA,GAAe,MAAA;AAAA,IACnB,aAAa,MAAA,CAAO;AAAA,MAClB,8BAA8B,MAAM,IAAA;AAAA,MACpC,6BAA6B,MAAM,IAAA;AAAA,MACnC,kBAAA,EAAoB,CAAC,IAAA,EAA6B,EAAA,KAAiC;AACjF,QAAA,IAAI,CAAC,KAAK,WAAA,EAAa;AACvB,QAAA,MAAM,QAAQ,UAAA,CAAW,IAAA,CAAK,YAAY,SAAA,EAAW,IAAA,CAAK,YAAY,SAAS,CAAA;AAC/E,QAAA,IAAI,SAAA,CAAU,YAAY,IAAA,EAAM;AAC9B,UAAA,SAAA,CAAU,OAAA,GAAU,KAAA;AACpB,UAAA;AAAA,QACF;AACA,QAAA,MAAM,KAAA,GAAQ,QAAQ,SAAA,CAAU,OAAA;AAChC,QAAA,SAAA,CAAU,OAAA,GAAU,KAAA;AACpB,QAAA,UAAA,CAAW,KAAK,CAAA;AAAA,MAClB,CAAA;AAAA,MACA,qBAAA,EAAuB,MAAM,aAAA,EAAc;AAAA,MAC3C,uBAAA,EAAyB,MAAM,aAAA;AAAc,KAC9C;AAAA,GACH,CAAE,OAAA;AAEF,EAAA,MAAM,aAAA,GAAgB;AAAA,IACpB,SAAA,EAAW;AAAA,MACT;AAAA,QACE,MAAA,EAAQ,cAAc,WAAA,CAAY;AAAA,UAChC,UAAA,EAAY,CAAC,IAAA,EAAM,GAAG,CAAA;AAAA,UACtB,WAAA,EAAa,CAAC,SAAA,EAAW,QAAQ;AAAA,SAClC;AAAA;AACH;AACF,GACF;AAEA,EAAA,MAAM,QAAA,GAAW,YAAY,WAAA,CAAY;AAAA,IACvC,UAAA,EAAY,CAAC,CAAA,EAAG,CAAC,CAAA;AAAA,IACjB,WAAA,EAAa,CAAC,CAAA,EAAG,MAAA,CAAO,eAAe;AAAA,GACxC,CAAA;AAED,EAAA,uBACE,IAAA,CAAC,QAAK,KAAA,EAAO,MAAA,CAAO,MAAM,QAAA,EAAqB,GAAG,aAAa,WAAA,EAC7D,QAAA,EAAA;AAAA,oBAAA,GAAA,CAAC,QAAA,CAAS,MAAT,EAAc,KAAA,EAAO,CAAC,MAAA,CAAO,IAAA,EAAM,aAAa,CAAA,EAAG,CAAA;AAAA,oBACpD,GAAA,CAAC,IAAA,EAAA,EAAK,KAAA,EAAO,MAAA,CAAO,SAAA,EAAW,CAAA;AAAA,oBAC/B,GAAA,CAAC,IAAA,EAAA,EAAK,KAAA,EAAO,MAAA,CAAO,YAAA,EAAc,CAAA;AAAA,wBAEjC,QAAA,CAAS,IAAA,EAAT,EAAc,KAAA,EAAO,CAAC,MAAA,CAAO,WAAA,EAAa,EAAE,OAAA,EAAS,gBAAgB,CAAA,EACnE,QAAA,EAAA,WAAA,IAAe,OAAA,KAAY,oBAC1B,IAAA,CAAA,QAAA,EAAA,EACE,QAAA,EAAA;AAAA,sBAAA,GAAA,CAAC,IAAA,EAAA,EAAK,KAAA,EAAO,EAAE,QAAA,EAAU,IAAI,UAAA,EAAY,KAAA,EAAM,EAC5C,QAAA,EAAA,OAAA,GAAU,IAAI,CAAA,CAAA,EAAI,OAAO,CAAA,EAAA,CAAA,GAAO,CAAA,EAAG,OAAO,CAAA,EAAA,CAAA,EAC7C,CAAA;AAAA,sBACA,IAAA,CAAC,QAAK,KAAA,EAAO,EAAE,UAAU,EAAA,EAAI,OAAA,EAAS,KAAI,EACtC,QAAA,EAAA;AAAA,QAAA,OAAA,IAAW,IAAI,GAAA,GAAM,QAAA;AAAA,QAAK,GAAA;AAAA,QAAE,KAAK,GAAA,CAAI,OAAA,GAAU,OAAO,aAAa,CAAA,CAAE,QAAQ,CAAC;AAAA,OAAA,EAClF,CAAA;AAAA,0BACC,IAAA,EAAA,EAAK,KAAA,EAAO,OAAO,YAAA,EAClB,QAAA,kBAAA,GAAA,CAAC,SAAS,IAAA,EAAT,EAAc,KAAA,EAAO,CAAC,OAAO,WAAA,EAAa,EAAE,OAAO,QAAA,EAAU,GAAG,CAAA,EACnE;AAAA,KAAA,EACF,oBAEA,GAAA,CAAC,IAAA,EAAA,EAAK,OAAO,MAAA,CAAO,SAAA,EAAW,oBAAC,CAAA,EAEpC;AAAA,GAAA,EACF,CAAA;AAEJ;AC7QO,IAAM,aAAwC,CAAC;AAAA,EACpD,YAAA,GAAe,EAAA;AAAA,EACf,WAAA;AAAA,EACA,gBAAA;AAAA,EACA,IAAA,GAAO;AACT,CAAA,KAAM;AACJ,EAAA,MAAM,SAA2B,EAAE,GAAG,eAAe,GAAI,WAAA,IAAe,EAAC,EAAG;AAE5E,EAAA,MAAM,KAAA,GAAQA,OAAmC,MAAS,CAAA;AAC1D,EAAA,IAAI,CAAC,KAAA,CAAM,OAAA,QAAe,OAAA,GAAU,IAAI,eAAe,YAAY,CAAA;AAEnE,EAAA,MAAM,CAAC,SAAA,EAAW,YAAY,IAAIC,QAAAA,CAAS,KAAA,CAAM,QAAQ,gBAAgB,CAAA;AACzE,EAAA,MAAM,CAAC,OAAA,EAAS,UAAU,IAAIA,QAAAA,CAAS,KAAA,CAAM,QAAQ,UAAU,CAAA;AAE/D,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,MAAM,KAAA,GAAQ,KAAA,CAAM,OAAA,CAAS,SAAA,CAAU,CAAC,IAAA,KAAS;AAC/C,MAAA,YAAA,CAAa,IAAI,CAAA;AACjB,MAAA,UAAA,CAAW,KAAA,CAAM,QAAS,UAAU,CAAA;AAAA,IACtC,CAAC,CAAA;AACD,IAAA,OAAO,MAAM,KAAA,EAAM;AAAA,EACrB,CAAA,EAAG,EAAE,CAAA;AAGL,EAAA,MAAM,QAAQD,MAAAA,CAAO,IAAIE,SAAS,KAAA,CAAM,CAAC,CAAC,CAAA,CAAE,OAAA;AAC5C,EAAA,MAAM,aAAA,GAAgB,GAAA;AAGtB,EAAA,MAAM,CAAC,YAAA,EAAc,eAAe,CAAA,GAAID,SAAS,CAAC,CAAA;AAElD,EAAA,SAAS,iBAAiB,UAAA,EAAoB;AAE5C,IAAA,KAAA,CAAM,SAAS,CAAC,CAAA;AAChB,IAAAC,QAAAA,CAAS,OAAO,KAAA,EAAO;AAAA,MACrB,OAAA,EAAS,CAAA;AAAA,MACT,QAAA,EAAU,aAAA;AAAA,MACV,MAAA,EAAQC,MAAAA,CAAO,GAAA,CAAIA,MAAAA,CAAO,IAAI,CAAA;AAAA,MAC9B,eAAA,EAAiB;AAAA,KAClB,CAAA,CAAE,KAAA,CAAM,MAAM,KAAA,CAAM,QAAA,CAAS,CAAC,CAAC,CAAA;AAGhC,IAAA,IAAI,MAAA,CAAO,yBAAyB,aAAA,EAAc;AAIlD,IAAA,eAAA,CAAgB,CAACC,EAAAA,KAAMA,EAAAA,GAAI,CAAC,CAAA;AAG5B,IAAA,UAAA,CAAW,MAAM;AACf,MAAA,KAAA,CAAM,OAAA,EAAS,OAAO,UAAU,CAAA;AAAA,IAClC,GAAG,aAAa,CAAA;AAAA,EAClB;AAEA,EAAA,MAAM,cAAA,GAAiC,CAAC,IAAA,EAAM,IAAA,EAAM,UAAA,KAAe;AACjE,IAAA,gBAAA,CAAiB,IAAA,EAAM,IAAA,EAAM,CAAC,EAAA,KAAO;AACnC,MAAA,UAAA,CAAW,EAAE,CAAA;AACb,MAAA,IAAI,EAAA,EAAI;AAEN,QAAA,UAAA,CAAW,MAAM,gBAAA,CAAiB,IAAI,CAAA,EAAG,CAAC,CAAA;AAAA,MAC5C;AAAA,IACF,CAAC,CAAA;AAAA,EACH,CAAA;AAEA,EAAA,MAAM,CAAA,GAAIC,OAAAA;AAAA,IACR,MACEC,WAAW,MAAA,CAAO;AAAA,MAChB,WAAW,EAAE,IAAA,EAAM,GAAG,OAAA,EAAS,EAAA,EAAI,YAAY,QAAA,EAAS;AAAA,MACxD,KAAA,EAAO,EAAE,QAAA,EAAU,EAAA,EAAI,UAAA,EAAY,KAAA,EAAO,OAAA,EAAS,GAAA,EAAK,SAAA,EAAW,CAAA,EAAG,aAAA,EAAe,CAAA,EAAE;AAAA,MACvF,KAAA,EAAO,EAAE,QAAA,EAAU,EAAA,EAAI,UAAA,EAAY,KAAA,EAAO,WAAA,EAAa,CAAC,cAAc,CAAA,EAAG,cAAA,EAAgB,CAAA,EAAE;AAAA,MAC3F,IAAA,EAAM,EAAE,QAAA,EAAU,EAAA,EAAI,OAAA,EAAS,GAAA,EAAK,SAAA,EAAW,QAAA,EAAU,SAAA,EAAW,CAAA,EAAG,YAAA,EAAc,EAAA,EAAG;AAAA,MACxF,GAAA,EAAK,EAAE,UAAA,EAAY,QAAA,EAAS;AAAA,MAC5B,YAAA,EAAc;AAAA,QACZ,QAAA,EAAU,UAAA;AAAA,QACV,IAAA,EAAM,CAAA;AAAA,QACN,KAAA,EAAO,CAAA;AAAA,QACP,GAAA,EAAK,CAAA;AAAA,QACL,MAAA,EAAQ,CAAA;AAAA,QACR,eAAA,EAAiB;AAAA;AACnB,KACD,CAAA;AAAA,IACH;AAAC,GACH;AAEA,EAAA,MAAM,UAAA,GAAa;AAAA,IACjB,WAAW,CAAC,EAAE,OAAO,KAAA,CAAM,WAAA,CAAY,EAAE,UAAA,EAAY,CAAC,GAAG,CAAC,CAAA,EAAG,aAAa,CAAC,CAAA,EAAG,IAAI,CAAA,EAAG,GAAG,CAAA;AAAA,IACxF,OAAA,EAAS;AAAA,GACX;AAEA,EAAA,uBACEC,IAAAA,CAACC,IAAAA,EAAA,EAAK,KAAA,EAAO,EAAE,SAAA,EACb,QAAA,EAAA;AAAA,oBAAAC,IAACC,IAAAA,EAAA,EAAK,KAAA,EAAO,CAAA,CAAE,OAAO,QAAA,EAAA,gBAAA,EAAc,CAAA;AAAA,oBACpCH,IAAAA,CAACC,IAAAA,EAAA,EACC,QAAA,EAAA;AAAA,sBAAAC,IAACC,IAAAA,EAAA,EAAK,KAAA,EAAO,CAAA,CAAE,OAAQ,QAAA,EAAA,OAAA,EAAQ,CAAA;AAAA,sBAC/BD,GAAAA,CAACP,QAAAA,CAAS,IAAA,EAAT,EAAc,aAAA,EAAc,MAAA,EAAO,KAAA,EAAO,CAAC,CAAA,CAAE,YAAA,EAAc,UAAU,CAAA,EAAG;AAAA,KAAA,EAC3E,CAAA;AAAA,oBACAO,GAAAA,CAACC,IAAAA,EAAA,EAAK,KAAA,EAAO,CAAA,CAAE,MAAM,QAAA,EAAA,sCAAA,EAAoC,CAAA;AAAA,oBAGzDD,GAAAA,CAAC,YAAA,EAAA,EAAa,IAAA,EAAM,YAAA,EAAc,CAAA;AAAA,oBAElCA,GAAAA,CAACD,IAAAA,EAAA,EAAK,OAAO,CAAA,CAAE,GAAA,EACb,QAAA,kBAAAC,GAAAA,CAAC,cAAA,EAAA,EAAe,IAAA,EAAY,MAAA,EAAgB,gBAAA,EAAkB,gBAAgB,CAAA,EAChF;AAAA,GAAA,EACF,CAAA;AAEJ;AAGA,IAAM,YAAA,GAA2C,CAAC,EAAE,IAAA,EAAK,KAAM;AAC7D,EAAA,MAAM,MAAA,GAAS,KAAA,CAAM,IAAA,CAAK,EAAE,MAAA,EAAQ,EAAA,EAAG,EAAG,CAAC,CAAA,EAAG,CAAA,KAAM,CAAA,GAAI,IAAI,CAAA;AAC5D,EAAA,uBACEA,GAAAA,CAACD,IAAAA,EAAA,EAAK,aAAA,EAAc,QAAO,KAAA,EAAO,EAAE,QAAA,EAAU,UAAA,EAAY,KAAA,EAAO,MAAA,EAAQ,QAAQ,MAAA,EAAO,EACrF,QAAA,EAAA,MAAA,CAAO,GAAA,CAAI,CAAC,CAAA,qBACXC,GAAAA,CAAC,aAAA,EAAA,EAAA,EAAmB,CAAG,CACxB,CAAA,EACH,CAAA;AAEJ,CAAA;AAEA,IAAM,gBAA0B,MAAM;AACpC,EAAA,MAAM,CAAA,GAAIT,MAAAA,CAAO,IAAIE,QAAAA,CAAS,KAAA,CAAM,IAAA,CAAK,MAAA,EAAO,GAAI,GAAA,GAAM,GAAG,CAAC,CAAA,CAAE,OAAA;AAChE,EAAA,MAAM,CAAA,GAAIF,MAAAA,CAAO,IAAIE,QAAAA,CAAS,KAAA,CAAM,CAAC,IAAA,CAAK,MAAA,EAAO,GAAI,GAAA,GAAM,EAAE,CAAC,CAAA,CAAE,OAAA;AAChE,EAAA,MAAM,IAAIF,MAAAA,CAAO,IAAIE,SAAS,KAAA,CAAM,CAAC,CAAC,CAAA,CAAE,OAAA;AAExC,EAAA,SAAA,CAAU,MAAM;AACd,IAAAA,SAAS,QAAA,CAAS;AAAA,MAChBA,QAAAA,CAAS,MAAA,CAAO,CAAA,EAAG,EAAE,SAAS,GAAA,EAAK,QAAA,EAAU,IAAA,GAAO,IAAA,CAAK,MAAA,EAAO,GAAI,GAAA,EAAK,eAAA,EAAiB,MAAM,CAAA;AAAA,MAChGA,QAAAA,CAAS,MAAA,CAAO,CAAA,EAAG,EAAE,OAAA,EAAS,GAAG,QAAA,EAAU,IAAA,EAAM,eAAA,EAAiB,IAAA,EAAM;AAAA,KACzE,EAAE,KAAA,EAAM;AAAA,EACX,CAAA,EAAG,CAAC,CAAA,EAAG,CAAC,CAAC,CAAA;AAET,EAAA,MAAM,MAAA,GAAS,EAAE,WAAA,CAAY,EAAE,YAAY,CAAC,CAAA,EAAG,CAAC,CAAA,EAAG,WAAA,EAAa,CAAC,MAAA,EAAQ,CAAA,EAAG,KAAK,MAAA,EAAO,GAAI,MAAM,GAAG,CAAA,GAAA,CAAK,GAAG,CAAA;AAC7G,EAAA,MAAM,IAAA,GAAO,CAAA,GAAI,IAAA,CAAK,MAAA,EAAO,GAAI,CAAA;AACjC,EAAA,MAAM,EAAA,GAAK,CAAC,SAAA,EAAW,SAAA,EAAW,SAAA,EAAW,SAAS,CAAA,CAAE,IAAA,CAAK,KAAA,CAAM,IAAA,CAAK,MAAA,EAAO,GAAI,CAAC,CAAC,CAAA;AAErF,EAAA,uBACEO,GAAAA;AAAA,IAACP,QAAAA,CAAS,IAAA;AAAA,IAAT;AAAA,MACC,KAAA,EAAO;AAAA,QACL,QAAA,EAAU,UAAA;AAAA,QACV,IAAA,EAAM,KAAA;AAAA,QACN,GAAA,EAAK,CAAA;AAAA,QACL,KAAA,EAAO,IAAA;AAAA,QACP,MAAA,EAAQ,IAAA;AAAA,QACR,eAAA,EAAiB,EAAA;AAAA,QACjB,SAAA,EAAW,CAAC,EAAE,UAAA,EAAY,CAAA,EAAE,EAAG,EAAE,UAAA,EAAY,CAAA,EAAE,EAAG,EAAE,MAAA,EAAQ;AAAA;AAC9D;AAAA,GACF;AAEJ,CAAA","file":"index.mjs","sourcesContent":["export type CountdownListener = (remainingSeconds: number) => void;\n\n/** Publishes remaining seconds once a second. */\nexport class CountdownTimer {\n  private remainingInternal: number;\n  private intervalId: any = null;\n  private listeners = new Set<CountdownListener>();\n\n  /** Remaining time in seconds (read-only) */\n  get remaining(): number {\n    return this.remainingInternal;\n  }\n\n  /** - Parameter start: initial value in seconds. */\n  constructor(start: number) {\n    this.remainingInternal = Math.max(0, Math.floor(start || 0));\n    this.startCountdown();\n  }\n\n  /** Start the downward count. */\n  public startCountdown() {\n    if (this.intervalId) return;\n    this.intervalId = setInterval(() => {\n      if (this.remainingInternal > 0) {\n        this.remainingInternal -= 1;\n        this.emit();\n      }\n    }, 1000);\n  }\n\n  /** Extend (or shorten) the timer. Accepts negative seconds. */\n  public extend(bySeconds: number) {\n    this.remainingInternal = Math.max(0, this.remainingInternal + Math.floor(bySeconds));\n    this.emit();\n  }\n\n  /** Subscribe to remaining changes (emits immediately). */\n  public subscribe(listener: CountdownListener): () => void {\n    this.listeners.add(listener);\n    listener(this.remainingInternal);\n    return () => this.listeners.delete(listener);\n  }\n\n  /** Stop and dispose. */\n  public dispose() {\n    if (this.intervalId) clearInterval(this.intervalId);\n    this.intervalId = null;\n    this.listeners.clear();\n  }\n\n  private emit() {\n    for (const l of this.listeners) l(this.remainingInternal);\n  }\n}\n","import { CountdownTimer } from \"./CountdownTimer\";\n\nexport type VMListener = (remainingSeconds: number) => void;\n\n/** Glue between a CountdownTimer and UI. */\nexport class TimerViewModel {\n  private timer: CountdownTimer;\n  private remainingSecondsInternal: number;\n  private unsub?: () => void;\n\n  /** Remaining seconds (read-only) */\n  get remainingSeconds(): number {\n    return this.remainingSecondsInternal;\n  }\n\n  /** Init (defaults to 30 minutes) */\n  constructor(startMinutes: number = 30) {\n    const secs = Math.max(0, Math.floor(startMinutes * 60));\n    this.timer = new CountdownTimer(secs);\n    this.remainingSecondsInternal = secs;\n    this.unsub = this.timer.subscribe((s) => (this.remainingSecondsInternal = s));\n  }\n\n  /** Add (or subtract) minutes. Accepts negatives. */\n  public extend(minutes: number) {\n    this.timer.extend(minutes * 60);\n  }\n\n  /** MM:SS string suitable for a monospaced label. */\n  public get timeString(): string {\n    const m = Math.floor(this.remainingSecondsInternal / 60);\n    const s = this.remainingSecondsInternal % 60;\n    return `${String(m).padStart(2, \"0\")}:${String(s).padStart(2, \"0\")}`;\n  }\n\n  /** Subscribe to changes. Emits immediately. */\n  public subscribe(listener: VMListener): () => void {\n    listener(this.remainingSecondsInternal);\n    return this.timer.subscribe((s) => listener((this.remainingSecondsInternal = s)));\n  }\n\n  public dispose() {\n    this.unsub?.();\n    this.timer.dispose();\n  }\n}\n","export interface TimerWheelConfig {\n  // Wheel mechanics\n  minuteStep: number;\n  snapDegree: number;           // degrees per notch\n  costPerMinute: number;        // dollars\n  allowsNegative: boolean;\n  maxMinutes: number;           // 0 = unbounded\n\n  // Ring appearance\n  ringLineWidth: number;        // px\n  ringGradient: string[];       // currently visualized as a solid mix\n\n  // Overlay bar\n  overlayBarWidth: number;      // px\n  overlayBarHeight: number;     // px\n\n  // Sound / Haptics\n  tickSoundEnabled: boolean;    // sound hook is a no-op by default\n  hapticSharpness: number;      // kept for parity\n  hapticIntensity: number;\n  shouldPlaySuccessHaptic: boolean;\n}\n\nexport const defaultConfig: TimerWheelConfig = {\n  minuteStep: 1,\n  snapDegree: 15,\n  costPerMinute: 0.35,\n  allowsNegative: true,\n  maxMinutes: 0,\n  ringLineWidth: 40,\n  ringGradient: [\"rgba(128,128,128,0.4)\", \"rgba(128,128,128,0.9)\"],\n  overlayBarWidth: 75,\n  overlayBarHeight: 6,\n  tickSoundEnabled: true,\n  hapticSharpness: 0.4,\n  hapticIntensity: 0.6,\n  shouldPlaySuccessHaptic: true\n};\n","import { Platform, Vibration } from \"react-native\";\n\nexport function tickHaptic() {\n  // a tiny pulse\n  if (Platform.OS === \"android\") Vibration.vibrate(5);\n  else Vibration.vibrate(5);\n}\n\nexport function successHaptic() {\n  if (Platform.OS === \"android\") Vibration.vibrate([0, 12, 30, 18]);\n  else Vibration.vibrate([0, 10, 50, 10]); // double-tap-ish\n}\n","import React, { useMemo, useRef, useState } from \"react\";\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  LayoutChangeEvent,\n  PanResponder,\n  PanResponderGestureState,\n  StyleSheet,\n  Text,\n  View\n} from \"react-native\";\nimport { defaultConfig, TimerWheelConfig } from \"./TimerWheelConfig\";\nimport { tickHaptic } from \"./haptics\";\n\nexport type PaymentRequest = (\n  minutes: number,\n  cost: number,\n  completion: (ok: boolean) => void\n) => void;\n\nexport interface TimerWheelViewProps {\n  config?: Partial<TimerWheelConfig>;\n  onRequestPayment: PaymentRequest;\n  size?: number; // square size (default 260)\n}\n\nexport const TimerWheelView: React.FC<TimerWheelViewProps> = ({\n  config: cfg,\n  onRequestPayment,\n  size = 260\n}) => {\n  const config: TimerWheelConfig = { ...defaultConfig, ...(cfg || {}) };\n\n  // geometry\n  const [radius, setRadius] = useState(size / 2);\n  const [centre, setCentre] = useState({ x: size / 2, y: size / 2 });\n\n  // state\n  const cumAngle = useRef(0);\n  const lastAngle = useRef<number | null>(null);\n  const liveDeltaMins = useRef(0);\n  const [uiDelta, setUiDelta] = useState(0);\n  const [showOverlay, setShowOverlay] = useState(false);\n\n  // animation\n  const wheelRotation = useRef(new Animated.Value(0)).current;\n  const overlayOpacity = useRef(new Animated.Value(1)).current;\n  const barProgress = useRef(new Animated.Value(0)).current; // 0..1\n  const snapIndex = useRef(0);\n\n  const styles = useMemo(\n    () =>\n      StyleSheet.create({\n        root: { width: size, height: size, alignItems: \"center\", justifyContent: \"center\" },\n        ring: {\n          position: \"absolute\",\n          width: size,\n          height: size,\n          borderRadius: radius,\n          borderWidth: config.ringLineWidth,\n          borderColor: \"rgba(128,128,128,0.65)\"\n        },\n        innerDisc: {\n          position: \"absolute\",\n          left: config.ringLineWidth,\n          top: config.ringLineWidth,\n          width: size - config.ringLineWidth * 2,\n          height: size - config.ringLineWidth * 2,\n          borderRadius: (size - config.ringLineWidth * 2) / 2,\n          backgroundColor: \"rgba(118,118,118,0.06)\"\n        },\n        innerOutline: {\n          position: \"absolute\",\n          width: radius,\n          height: radius,\n          borderRadius: radius / 2,\n          borderWidth: 1,\n          borderColor: \"rgba(0,0,0,0.25)\"\n        },\n        overlayWrap: { alignItems: \"center\", justifyContent: \"center\" },\n        capsuleTrack: {\n          width: config.overlayBarWidth,\n          height: config.overlayBarHeight,\n          borderRadius: config.overlayBarHeight / 2,\n          backgroundColor: \"rgba(0,0,0,0.2)\",\n          overflow: \"hidden\"\n        },\n        capsuleFill: {\n          height: config.overlayBarHeight,\n          borderRadius: config.overlayBarHeight / 2,\n          backgroundColor: \"#0a84ff\"\n        },\n        resetIcon: { fontSize: 28, fontWeight: \"600\", opacity: 0.6 }\n      }),\n    [size, radius, config]\n  );\n\n  function onLayout(e: LayoutChangeEvent) {\n    const w = e.nativeEvent.layout.width;\n    const h = e.nativeEvent.layout.height;\n    setRadius(w / 2);\n    setCentre({ x: w / 2, y: h / 2 });\n  }\n\n  function vecToAngle(x: number, y: number): number {\n    const dx = x - centre.x;\n    const dy = y - centre.y;\n    return (Math.atan2(dy, dx) * 180) / Math.PI;\n  }\n\n  function applyDelta(delta: number) {\n    // wrap\n    let adjustedDelta = delta;\n    if (adjustedDelta > 180) adjustedDelta -= 360;\n    if (adjustedDelta < -180) adjustedDelta += 360;\n\n    const tentativeCumAngle = cumAngle.current + adjustedDelta;\n    const steps = tentativeCumAngle / config.snapDegree;\n    let mins = Math.round(steps) * config.minuteStep;\n\n    // clamp mins if needed\n    if (config.maxMinutes > 0) {\n      if (mins > config.maxMinutes) mins = config.maxMinutes;\n      if (mins < -config.maxMinutes) mins = -config.maxMinutes;\n    }\n    if (!config.allowsNegative && mins < 0) mins = 0;\n\n    // bound logic: if we're at a bound and pushing further, discard\n    const current = liveDeltaMins.current;\n    const atPos = config.maxMinutes > 0 && current === config.maxMinutes;\n    const atNeg = config.maxMinutes > 0 && current === -config.maxMinutes;\n    const atZeroBound = !config.allowsNegative && current === 0;\n\n    let discard = false;\n    if (atPos && adjustedDelta > 0) discard = true;\n    else if (atNeg && adjustedDelta < 0) discard = true;\n    else if (atZeroBound && adjustedDelta < 0) discard = true;\n\n    if (discard) {\n      liveDeltaMins.current = mins;\n      setUiDelta(mins);\n      setShowOverlay(true);\n      return;\n    }\n\n    // commit delta\n    cumAngle.current += adjustedDelta;\n    wheelRotation.setValue(cumAngle.current);\n\n    // tick on notch crossings (and not at bounds)\n    const newSnap = Math.round(cumAngle.current / config.snapDegree);\n    const atAnyBound =\n      (config.maxMinutes > 0 && (mins === config.maxMinutes || mins === -config.maxMinutes)) ||\n      (!config.allowsNegative && mins === 0);\n\n    if (newSnap !== snapIndex.current && !atAnyBound) {\n      snapIndex.current = newSnap;\n      tickHaptic();\n    }\n\n    liveDeltaMins.current = mins;\n    setUiDelta(mins);\n    setShowOverlay(true);\n  }\n\n  function handleRelease() {\n    const minutes = liveDeltaMins.current;\n    if (minutes === 0) {\n      resetState();\n      return;\n    }\n\n    // snap-back anim\n    Animated.spring(wheelRotation, {\n      toValue: 0,\n      useNativeDriver: true,\n      speed: 18,\n      bounciness: 6\n    }).start();\n\n    // 2s bar\n    barProgress.setValue(1);\n    Animated.timing(barProgress, {\n      toValue: 0,\n      duration: 2000,\n      easing: Easing.linear,\n      useNativeDriver: false\n    }).start();\n\n    // after bar, fire callback\n    const cost = Number((Math.abs(minutes) * config.costPerMinute).toFixed(2));\n    setTimeout(() => {\n      onRequestPayment(minutes, cost, (ok) => {\n        if (ok) celebrate();\n        else resetState();\n      });\n    }, 2000);\n\n    // reset maths (but leave overlay until celebration/reset)\n    cumAngle.current = 0;\n    lastAngle.current = null;\n    snapIndex.current = 0;\n  }\n\n  function resetState() {\n    setShowOverlay(false);\n    setUiDelta(0);\n    overlayOpacity.setValue(1);\n    barProgress.setValue(0);\n  }\n\n  function celebrate() {\n    Animated.timing(overlayOpacity, {\n      toValue: 0,\n      duration: 400,\n      useNativeDriver: true\n    }).start(() => {\n      resetState();\n    });\n  }\n\n  // gestures\n  const panResponder = useRef(\n    PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onMoveShouldSetPanResponder: () => true,\n      onPanResponderMove: (_evt: GestureResponderEvent, gs: PanResponderGestureState) => {\n        if (!_evt.nativeEvent) return;\n        const angle = vecToAngle(_evt.nativeEvent.locationX, _evt.nativeEvent.locationY);\n        if (lastAngle.current === null) {\n          lastAngle.current = angle;\n          return;\n        }\n        const delta = angle - lastAngle.current;\n        lastAngle.current = angle;\n        applyDelta(delta);\n      },\n      onPanResponderRelease: () => handleRelease(),\n      onPanResponderTerminate: () => handleRelease()\n    })\n  ).current;\n\n  const ringTransform = {\n    transform: [\n      {\n        rotate: wheelRotation.interpolate({\n          inputRange: [-360, 360],\n          outputRange: [\"-360deg\", \"360deg\"]\n        })\n      }\n    ]\n  };\n\n  const barWidth = barProgress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, config.overlayBarWidth]\n  });\n\n  return (\n    <View style={styles.root} onLayout={onLayout} {...panResponder.panHandlers}>\n      <Animated.View style={[styles.ring, ringTransform]} />\n      <View style={styles.innerDisc} />\n      <View style={styles.innerOutline} />\n\n      <Animated.View style={[styles.overlayWrap, { opacity: overlayOpacity }]}>\n        {showOverlay && uiDelta !== 0 ? (\n          <>\n            <Text style={{ fontSize: 24, fontWeight: \"700\" }}>\n              {uiDelta > 0 ? `+${uiDelta} m` : `${uiDelta} m`}\n            </Text>\n            <Text style={{ fontSize: 16, opacity: 0.8 }}>\n              {(uiDelta >= 0 ? \"+\" : \"–\")}${Math.abs(uiDelta * config.costPerMinute).toFixed(2)}\n            </Text>\n            <View style={styles.capsuleTrack}>\n              <Animated.View style={[styles.capsuleFill, { width: barWidth }]} />\n            </View>\n          </>\n        ) : (\n          <Text style={styles.resetIcon}>↻</Text>\n        )}\n      </Animated.View>\n    </View>\n  );\n};\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Animated, Easing, StyleSheet, Text, View } from \"react-native\";\nimport { TimerWheelView, PaymentRequest } from \"./TimerWheelView\";\nimport { TimerWheelConfig, defaultConfig } from \"./TimerWheelConfig\";\nimport { TimerViewModel } from \"../logic/TimerViewModel\";\nimport { successHaptic } from \"./haptics\";\nimport { playSuccessSound } from \"./sound\";\n\nexport interface WheelTimerProps {\n  startMinutes?: number;\n  wheelConfig?: Partial<TimerWheelConfig>;\n  onRequestPayment: PaymentRequest;\n  size?: number;\n}\n\nexport const WheelTimer: React.FC<WheelTimerProps> = ({\n  startMinutes = 30,\n  wheelConfig,\n  onRequestPayment,\n  size = 260\n}) => {\n  const config: TimerWheelConfig = { ...defaultConfig, ...(wheelConfig || {}) };\n\n  const vmRef = useRef<TimerViewModel | undefined>(undefined);\n  if (!vmRef.current) vmRef.current = new TimerViewModel(startMinutes);\n\n  const [remaining, setRemaining] = useState(vmRef.current.remainingSeconds);\n  const [timeStr, setTimeStr] = useState(vmRef.current.timeString);\n\n  useEffect(() => {\n    const unsub = vmRef.current!.subscribe((secs) => {\n      setRemaining(secs);\n      setTimeStr(vmRef.current!.timeString);\n    });\n    return () => unsub();\n  }, []);\n\n  // neon flash\n  const flash = useRef(new Animated.Value(0)).current;\n  const flashDuration = 600;\n\n  // confetti-lite: a few animated squares\n  const [confettiSeed, setConfettiSeed] = useState(0);\n\n  function startCelebration(addMinutes: number) {\n    // flash\n    flash.setValue(0);\n    Animated.timing(flash, {\n      toValue: 1,\n      duration: flashDuration,\n      easing: Easing.out(Easing.quad),\n      useNativeDriver: true\n    }).start(() => flash.setValue(0));\n\n    // haptic + (optional) sound\n    if (config.shouldPlaySuccessHaptic) successHaptic();\n    playSuccessSound();\n\n    // confetti\n    setConfettiSeed((s) => s + 1);\n\n    // update timer after flash\n    setTimeout(() => {\n      vmRef.current?.extend(addMinutes);\n    }, flashDuration);\n  }\n\n  const onWheelRequest: PaymentRequest = (mins, cost, completion) => {\n    onRequestPayment(mins, cost, (ok) => {\n      completion(ok);\n      if (ok) {\n        // kick off celebration ~2s after the wheel’s bar completes (Wheel already waits 2s)\n        setTimeout(() => startCelebration(mins), 0);\n      }\n    });\n  };\n\n  const s = useMemo(\n    () =>\n      StyleSheet.create({\n        container: { flex: 0, padding: 16, alignItems: \"center\" },\n        title: { fontSize: 14, fontWeight: \"700\", opacity: 0.7, marginTop: 4, letterSpacing: 1 },\n        timer: { fontSize: 72, fontWeight: \"800\", fontVariant: [\"tabular-nums\"], marginVertical: 8 },\n        hint: { fontSize: 14, opacity: 0.7, textAlign: \"center\", marginTop: 8, marginBottom: 16 },\n        row: { alignItems: \"center\" },\n        flashOverlay: {\n          position: \"absolute\",\n          left: 0,\n          right: 0,\n          top: 0,\n          bottom: 0,\n          backgroundColor: \"rgba(0,255,120,0.18)\"\n        }\n      }),\n    []\n  );\n\n  const flashStyle = {\n    transform: [{ scale: flash.interpolate({ inputRange: [0, 1], outputRange: [1, 1.06] }) }],\n    opacity: flash\n  };\n\n  return (\n    <View style={s.container}>\n      <Text style={s.title}>TIME REMAINING</Text>\n      <View>\n        <Text style={s.timer}>{timeStr}</Text>\n        <Animated.View pointerEvents=\"none\" style={[s.flashOverlay, flashStyle]} />\n      </View>\n      <Text style={s.hint}>Spin the dial to extend your booking</Text>\n\n      {/* confetti-lite */}\n      <ConfettiLite seed={confettiSeed} />\n\n      <View style={s.row}>\n        <TimerWheelView size={size} config={config} onRequestPayment={onWheelRequest} />\n      </View>\n    </View>\n  );\n};\n\n/** tiny confetti with Animated Views, zero native deps */\nconst ConfettiLite: React.FC<{ seed: number }> = ({ seed }) => {\n  const pieces = Array.from({ length: 40 }, (_, i) => i + seed);\n  return (\n    <View pointerEvents=\"none\" style={{ position: \"absolute\", width: \"100%\", height: \"100%\" }}>\n      {pieces.map((k) => (\n        <ConfettiPiece key={k} />\n      ))}\n    </View>\n  );\n};\n\nconst ConfettiPiece: React.FC = () => {\n  const x = useRef(new Animated.Value(Math.random() * 300 - 150)).current;\n  const y = useRef(new Animated.Value(-Math.random() * 200 - 20)).current;\n  const r = useRef(new Animated.Value(0)).current;\n\n  useEffect(() => {\n    Animated.parallel([\n      Animated.timing(y, { toValue: 500, duration: 1200 + Math.random() * 800, useNativeDriver: true }),\n      Animated.timing(r, { toValue: 1, duration: 1500, useNativeDriver: true })\n    ]).start();\n  }, [y, r]);\n\n  const rotate = r.interpolate({ inputRange: [0, 1], outputRange: [\"0deg\", `${Math.random() * 720 - 360}deg`] });\n  const size = 6 + Math.random() * 6;\n  const bg = [\"#34d399\", \"#10b981\", \"#22d3ee\", \"#a78bfa\"][Math.floor(Math.random() * 4)];\n\n  return (\n    <Animated.View\n      style={{\n        position: \"absolute\",\n        left: \"50%\",\n        top: 0,\n        width: size,\n        height: size,\n        backgroundColor: bg,\n        transform: [{ translateX: x }, { translateY: y }, { rotate }]\n      }}\n    />\n  );\n};\n"]}